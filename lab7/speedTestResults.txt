InsertRandomSpeedTest
This program inserts random Strings of length L into different types of maps as <String, Integer> pairs.
Please enter desired length of each string: 100

Enter # strings to insert into the maps: 100000
--Stack Overflow -- couldn't add 100000 strings of length 100.
class bstmap.BSTMap: 0.17 sec
Java's Built-in TreeMap: 0.20 sec
Java's Built-in HashMap: 0.14 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 90000
--Stack Overflow -- couldn't add 90000 strings of length 100.
class bstmap.BSTMap: 0.16 sec
Java's Built-in TreeMap: 0.16 sec
Java's Built-in HashMap: 0.13 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 80000
--Stack Overflow -- couldn't add 80000 strings of length 100.
class bstmap.BSTMap: 0.14 sec
Java's Built-in TreeMap: 0.14 sec
Java's Built-in HashMap: 0.09 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 70000
--Stack Overflow -- couldn't add 70000 strings of length 100.
class bstmap.BSTMap: 0.13 sec
Java's Built-in TreeMap: 0.13 sec
Java's Built-in HashMap: 0.09 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 60000
--Stack Overflow -- couldn't add 60000 strings of length 100.
class bstmap.BSTMap: 0.09 sec
Java's Built-in TreeMap: 0.11 sec
Java's Built-in HashMap: 0.08 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 50000
--Stack Overflow -- couldn't add 50000 strings of length 100.
class bstmap.BSTMap: 0.08 sec
Java's Built-in TreeMap: 0.08 sec
Java's Built-in HashMap: 0.06 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 40000
--Stack Overflow -- couldn't add 40000 strings of length 100.
class bstmap.BSTMap: 0.06 sec
Java's Built-in TreeMap: 0.06 sec
Java's Built-in HashMap: 0.05 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 30000
class bstmap.ULLMap: 8.35 sec
class bstmap.BSTMap: 0.05 sec
Java's Built-in TreeMap: 0.05 sec
Java's Built-in HashMap: 0.03 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 20000
class bstmap.ULLMap: 2.67 sec
class bstmap.BSTMap: 0.03 sec
Java's Built-in TreeMap: 0.03 sec
Java's Built-in HashMap: 0.02 sec
Would you like to try more timed-tests? (y/n)

Enter # strings to insert into the maps: 10000
class bstmap.ULLMap: 0.48 sec
class bstmap.BSTMap: 0.02 sec
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.02 sec




bstmap.InsertInOrderSpeedTest

This program inserts lexicographically increasing Strings into Maps as <String, Integer> pairs.

Enter # strings to insert into the maps: 5000
class bstmap.ULLMap: 0.18 sec
class bstmap.BSTMap: 0.23 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n): 

Enter # strings to insert into the maps: 10000
class bstmap.ULLMap: 0.91 sec
class bstmap.BSTMap: 0.71 sec
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 20000
class bstmap.ULLMap: 5.50 sec
--Stack Overflow -- couldn't add 20000 strings.
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.01 sec
Would you like to try more timed-tests? (y/n): y
