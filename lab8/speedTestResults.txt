 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.28 sec

Enter # strings to insert into your hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.03 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 20000
class hashmap.ULLMap: 1.15 sec

Enter # strings to insert into your hashmap.MyHashMap: 20000
class hashmap.MyHashMap: 0.04 sec

Enter # strings to insert into Java's HashMap: 20000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 30000
--Stack Overflow -- couldn't add 30000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 30000
class hashmap.MyHashMap: 0.06 sec

Enter # strings to insert into Java's HashMap: 30000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 40000
--Stack Overflow -- couldn't add 40000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 40000
class hashmap.MyHashMap: 0.06 sec

Enter # strings to insert into Java's HashMap: 40000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 50000
--Stack Overflow -- couldn't add 50000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 50000
class hashmap.MyHashMap: 0.14 sec

Enter # strings to insert into Java's HashMap: 50000
Java's Built-in HashMap: 0.04 sec





 This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 5000
class hashmap.ULLMap: 0.20 sec

Enter # strings to insert into hashmap.MyHashMap: 5000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 5000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.80 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 15000
class hashmap.ULLMap: 2.28 sec

Enter # strings to insert into hashmap.MyHashMap: 15000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 15000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 20000
class hashmap.ULLMap: 6.88 sec

Enter # strings to insert into hashmap.MyHashMap: 20000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 20000
Java's Built-in HashMap: 0.01 sec




"C:\Program Files\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1.1\lib\idea_rt.jar=8629:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.1.1\bin" -Dfile.encoding=UTF-8 -classpath C:\GEZEBANG\Desktop\git\cs61b_sp21\lab8\target\classes;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\Jama-1.0.3.jar\1.0.3\Jama-1.0.3.jar-1.0.3.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\algs4.jar\1.0\algs4.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\checkstyle-5.9-all.jar\5.9\checkstyle-5.9-all.jar-5.9.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\checkstyle-7.4-all.jar\7.4\checkstyle-7.4-all.jar-7.4.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\classmexer.jar\1.0\classmexer.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\commons-math3-3.6.jar\3.6\commons-math3-3.6.jar-3.6.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\gjdb.jar\1.0\gjdb.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\gson-2.8.2.jar\2.8.2\gson-2.8.2.jar-2.8.2.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\hamcrest-core-1.3.jar\1.3\hamcrest-core-1.3.jar-1.3.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\jetty-http-9.4.15.v20190215.jar\9.4.15\jetty-http-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\jetty-io-9.4.15.v20190215.jar\9.4.15\jetty-io-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\jetty-server-9.4.15.v20190215.jar\9.4.15\jetty-server-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\jetty-util-9.4.15.v20190215.jar\9.4.15\jetty-util-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\jh61b.jar\1.0\jh61b.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\junit-4.12.jar\4.12\junit-4.12.jar-4.12.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\servlet-api.jar\1.0\servlet-api.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\slf4j-api-1.7.26.jar\1.7.26\slf4j-api-1.7.26.jar-1.7.26.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\slf4j-simple-1.7.26.jar\1.7.26\slf4j-simple-1.7.26.jar-1.7.26.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\spark-core-2.3.jar\2.3\spark-core-2.3.jar-2.3.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\stdlib-package.jar\1.0\stdlib-package.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\stdlib.jar\1.0\stdlib.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\ucb.jar\1.0\ucb.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\websocket-api-9.4.15.v20190215.jar\9.4.15\websocket-api-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\websocket-client-9.4.15.v20190215.jar\9.4.15\websocket-client-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\websocket-common-9.4.15.v20190215.jar\9.4.15\websocket-common-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\websocket-server-9.4.15.v20190215.jar\9.4.15\websocket-server-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\websocket-servlet-9.4.15.v20190215.jar\9.4.15\websocket-servlet-9.4.15.v20190215.jar-9.4.15.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\xchart-3.5.1.jar\3.5.1\xchart-3.5.1.jar-3.5.1.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHgjdb.jar\1.0\PNHgjdb.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHjpt.jar\1.0\PNHjpt.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHtools.jar\1.0\PNHtools.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHucb-checkstyle.jar\1.0\PNHucb-checkstyle.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHucb-f2007.jar\1.0\PNHucb-f2007.jar-1.0.jar;C:\GEZEBANG\Desktop\git\cs61b_sp21\library-sp21\javalib\CS61B\PNHucb.jar\1.0\PNHucb.jar-1.0.jar speed.BucketsSpeedTest

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into each map: 10000
class hashmap.MyHashMapALBuckets: 0.03 sec
class hashmap.MyHashMapLLBuckets: 0.02 sec
class hashmap.MyHashMapTSBuckets: 0.03 sec
class hashmap.MyHashMapHSBuckets: 0.03 sec
class hashmap.MyHashMapPQBuckets: 0.02 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 20000
class hashmap.MyHashMapALBuckets: 0.04 sec
class hashmap.MyHashMapLLBuckets: 0.04 sec
class hashmap.MyHashMapTSBuckets: 0.04 sec
class hashmap.MyHashMapHSBuckets: 0.03 sec
class hashmap.MyHashMapPQBuckets: 0.03 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 30000
class hashmap.MyHashMapALBuckets: 0.04 sec
class hashmap.MyHashMapLLBuckets: 0.05 sec
class hashmap.MyHashMapTSBuckets: 0.04 sec
class hashmap.MyHashMapHSBuckets: 0.04 sec
class hashmap.MyHashMapPQBuckets: 0.04 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 40000
class hashmap.MyHashMapALBuckets: 0.05 sec
class hashmap.MyHashMapLLBuckets: 0.05 sec
class hashmap.MyHashMapTSBuckets: 0.05 sec
class hashmap.MyHashMapHSBuckets: 0.05 sec
class hashmap.MyHashMapPQBuckets: 0.06 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 50000
class hashmap.MyHashMapALBuckets: 0.09 sec
class hashmap.MyHashMapLLBuckets: 0.09 sec
class hashmap.MyHashMapTSBuckets: 0.09 sec
class hashmap.MyHashMapHSBuckets: 0.10 sec
class hashmap.MyHashMapPQBuckets: 0.11 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 60000
class hashmap.MyHashMapALBuckets: 0.09 sec
class hashmap.MyHashMapLLBuckets: 0.09 sec
class hashmap.MyHashMapTSBuckets: 0.08 sec
class hashmap.MyHashMapHSBuckets: 0.10 sec
class hashmap.MyHashMapPQBuckets: 0.09 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 70000
class hashmap.MyHashMapALBuckets: 0.12 sec
class hashmap.MyHashMapLLBuckets: 0.09 sec
class hashmap.MyHashMapTSBuckets: 0.10 sec
class hashmap.MyHashMapHSBuckets: 0.11 sec
class hashmap.MyHashMapPQBuckets: 0.09 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 80000
class hashmap.MyHashMapALBuckets: 0.09 sec
class hashmap.MyHashMapLLBuckets: 0.09 sec
class hashmap.MyHashMapTSBuckets: 0.09 sec
class hashmap.MyHashMapHSBuckets: 0.11 sec
class hashmap.MyHashMapPQBuckets: 0.10 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 90000
class hashmap.MyHashMapALBuckets: 0.10 sec
class hashmap.MyHashMapLLBuckets: 0.11 sec
class hashmap.MyHashMapTSBuckets: 0.11 sec
class hashmap.MyHashMapHSBuckets: 0.12 sec
class hashmap.MyHashMapPQBuckets: 0.10 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 100000
class hashmap.MyHashMapALBuckets: 0.22 sec
class hashmap.MyHashMapLLBuckets: 0.26 sec
class hashmap.MyHashMapTSBuckets: 0.23 sec
class hashmap.MyHashMapHSBuckets: 0.28 sec
class hashmap.MyHashMapPQBuckets: 0.30 sec

Would you like to try more timed-tests? (y/n)